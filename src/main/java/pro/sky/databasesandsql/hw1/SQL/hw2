INSERT INTO employee (
        first_name ,last_name ,gender , age)
        VALUES ('Ksenya' ,'Ivanova' ,'Woman' ,59);          //Доведите количество записей в таблице до 5.

INSERT INTO employee (
        first_name ,last_name ,gender , age)
        VALUES ('Dima' ,'Petrov' ,'man' ,52);

SELECT * FROM employee;
id | first_name | last_name | gender | age
----+------------+-----------+--------+-----
  3 | Petr       | Petrov    | man    |  13
  1 | Egor       | Egorov    | man    |  20
  4 | Kirill     | Gavrish   | man    |  23
  5 | Dima       | Petrov    | man    |  52
  6 | Ksenya     | Ivanova   | Woman  |  59

SELECT first_name AS Имя, last_name AS Фамилия FROM employee;   //Получите информацию об именах и фамилиях по всем сотрудникам. Колонки должны называться «Имя» и «Фамилия».
  Имя   | Фамилия
--------+---------
 Petr   | Petrov
 Dima   | Petrov
 Ksenya | Ivanova
 Dima   | Egorov
 Petr   | Gavrish

 SELECT * FROM employee WHERE age < 30 OR age > 50;            //Получите всю информацию о сотрудниках, которые младше 30 или старше 50 лет.
  id | first_name | last_name | gender | age
 ----+------------+-----------+--------+-----
   3 | Petr       | Petrov    | man    |  13
   5 | Dima       | Petrov    | man    |  52
   6 | Ksenya     | Ivanova   | Woman  |  59
   1 | Dima       | Egorov    | man    |  20
   4 | Petr       | Gavrish   | man    |  23

SELECT * FROM employee WHERE age BETWEEN 30 AND 50;             //Получите всю информацию о сотрудниках, которым от 30 до 50 лет.
 id | first_name | last_name | gender | age
----+------------+-----------+--------+-----

SELECT * FROM employee ORDER BY last_name DESC;                 //Выведите полный список сотрудников, которые отсортированы по фамилиям в обратном порядке.
 id | first_name | last_name | gender | age
----+------------+-----------+--------+-----
  3 | Petr       | Petrov    | man    |  13
  5 | Dima       | Petrov    | man    |  52
  6 | Ksenya     | Ivanova   | Woman  |  59
  4 | Petr       | Gavrish   | man    |  23
  1 | Dima       | Egorov    | man    |  20

UPDATE employee SET first_name = 'Dima' WHERE id = 1;           //Измените имена у двух сотрудников так, чтобы на 5 сотрудников было только 3 разных имени, то есть чтобы получились две пары тезок и один сотрудник с уникальным именем.
UPDATE employee SET first_name = 'Petr' WHERE id = 4;

SELECT * FROM employee;
 id | first_name | last_name | gender | age
----+------------+-----------+--------+-----
  3 | Petr       | Petrov    | man    |  13
  5 | Dima       | Petrov    | man    |  52
  6 | Ksenya     | Ivanova   | Woman  |  59
  1 | Dima       | Egorov    | man    |  20
  4 | Petr       | Gavrish   | man    |  23

SELECT first_name AS Имя, SUM(age) AS Суммарный_возраст FROM employee GROUP BY Имя;
  Имя   | Суммарный_возраст
--------+-------------------
 Petr   |                36
 Ksenya |                59
 Dima   |                72

SELECT first_name , MIN(age) FROM employee GROUP BY first_name;
 first_name | min
------------+-----
 Petr       |  13
 Ksenya     |  59
 Dima       |  20

SELECT first_name , MAX(age) FROM employee GROUP BY first_name HAVING COUNT(first_name) > 1 ORDER BY MAX(age);
 first_name | max
------------+-----
 Petr       |  23
 Dima       |  52